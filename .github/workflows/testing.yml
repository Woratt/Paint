name: Test Paint

permissions:
  contents: write

on: push

jobs:
  build-macOS:
    runs-on: macos-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install dependencies 
        run: |
          brew update
          brew install cmake qt

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_PREFIX_PATH=$(brew --prefix qt)

      - name: Build project
        run: |
          cmake --build build -- -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 2)

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-base-dev qt6-tools-dev cmake build-essential

      - name: Configure CMake
        run: |
          cmake -S . -B build
      
      - name: Build project
        run: |
          cmake --build build -- -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 2)

      - name: Run tests
        run: |
          export QT_QPA_PLATFORM=offscreen
          ctest --output-on-failure --test-dir build

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          choco install cmake ninja -y
        shell: powershell

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.1
          arch: win64_msvc2019_64

      - name: Debug - Show source files
        run: |
          Get-ChildItem -Recurse -Include *.cpp,*.h | ForEach-Object { Write-Host "Found: $($_.FullName)" }
        shell: powershell

      - name: Configure CMake
        run: |
          cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Debug
        shell: powershell

      - name: Debug - Show library contents
        run: |
          Write-Host "=== paint_lib source files ==="
          Get-Content build/CMakeFiles/paint_lib.dir/sources.build | Write-Host
          Write-Host "=== test_paint source files ==="  
          Get-Content build/tests/CMakeFiles/test_paint.dir/sources.build | Write-Host
        shell: powershell

      - name: Build project
        run: |
          cmake --build build --config Debug --verbose
        shell: powershell

      - name: Check if symbols are in library
        run: |
          dumpbin /SYMBOLS "build/Debug/paint_lib.lib" | findstr "eventPosToImagePoint\|pinchTriggered\|clampOffset\|history"
        shell: powershell

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure -C Debug
        shell: powershell

  slang-format:
    runs-on: macos-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install slang-format
        run: |
          brew update
          brew install clang-format

      - name: Run clang-format (fix)
        run: |
          clang-format -i $(find . -type f \( -name "*.cpp" -o -name "*.h" \))

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit -m "Apply clang-format fixes" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }}