name: Test Paint

permissions:
  contents: write

on: push

jobs:
  build-macOS:
    runs-on: macos-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install dependencies 
        run: |
          brew update
          brew install cmake qt

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_PREFIX_PATH=$(brew --prefix qt)

      - name: Build project
        run: |
          cmake --build build -- -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 2)

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-base-dev qt6-tools-dev cmake build-essential

      - name: Configure CMake
        run: |
          cmake -S . -B build
      
      - name: Build project
        run: |
          cmake --build build -- -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 2)

      - name: Run tests
        run: |
          export QT_QPA_PLATFORM=offscreen
          ctest --output-on-failure --test-dir build

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Ninja, —â–æ–± –∑–±—ñ—Ä–∫–∞ –±—É–ª–∞ —à–≤–∏–¥–∫–æ—é
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      # ‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Qt (MSVC-—Å—É–º—ñ—Å–Ω—É –≤–µ—Ä—Å—ñ—é)
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.7.*'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'   # ‚ö†Ô∏è –≤–∞–∂–ª–∏–≤–æ: MSVC-Qt, –Ω–µ MinGW

      # ‚¨áÔ∏è –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Clang (–π–¥–µ –≤ –∫–æ–º–ø–ª–µ–∫—Ç—ñ –∑ Visual Studio)
      - name: Setup MSVC + Clang
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 'ClangCL'          # üí° –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ClangCL ABI

      # ‚¨áÔ∏è –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è CMake –∑ Clang
      - name: Configure CMake
        run: |
          cmake -S . -B build ^
          -G "Visual Studio 17 2022" ^
          -T ClangCL ^
          -A x64 ^
          -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}"

      # ‚¨áÔ∏è –ó–±—ñ—Ä–∫–∞
      - name: Build
        run: cmake --build build --config R

  slang-format:
    runs-on: macos-latest
    steps:
      - name: Get repository code 
        uses: actions/checkout@v3

      - name: Install slang-format
        run: |
          brew update
          brew install clang-format

      - name: Run clang-format (fix)
        run: |
          clang-format -i $(find . -type f \( -name "*.cpp" -o -name "*.h" \))

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit -m "Apply clang-format fixes" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }}